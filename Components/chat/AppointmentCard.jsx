import React from 'react';
import { Calendar, Clock, MapPin, User, Phone, Download, BedDouble, Check } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { motion } from 'framer-motion';

const PrintReceipt = ({ appointment, bedDetails }) => {
  return (
    <div id="print-receipt" className="hidden print:block font-sans text-gray-800 p-8">
      <header className="text-center mb-8">
        <h1 className="text-3xl font-bold text-blue-600">Doctigo Booking Summary</h1>
        <p className="text-lg text-gray-600">{appointment.hospital_name}</p>
      </header>
      
      <section className="mb-6">
        <h2 className="text-xl font-semibold border-b-2 border-gray-200 pb-2 mb-4">Patient Details</h2>
        <div className="grid grid-cols-2 gap-4">
          <p><strong>Patient Name:</strong> {appointment.patient_name}</p>
          <p><strong>Age:</strong> {appointment.patient_age}</p>
          <p><strong>Gender:</strong> {appointment.patient_gender}</p>
          <p><strong>Phone:</strong> {appointment.patient_phone}</p>
          <p className="col-span-2"><strong>Email:</strong> {appointment.patient_email}</p>
          <p className="col-span-2"><strong>Address:</strong> {appointment.patient_address}</p>
        </div>
      </section>

      <section className="mb-6">
        <h2 className="text-xl font-semibold border-b-2 border-gray-200 pb-2 mb-4">Appointment Details</h2>
        <div className="grid grid-cols-2 gap-4">
          <p><strong>Doctor:</strong> Dr. {appointment.doctor_name}</p>
          <p><strong>Booking Type:</strong> <span className="capitalize">{appointment.booking_type}</span></p>
          <p><strong>Date:</strong> {new Date(appointment.appointment_date).toLocaleDateString('en-GB')}</p>
          <p><strong>Time:</strong> {appointment.appointment_time}</p>
        </div>
        {appointment.symptoms && appointment.symptoms.length > 0 && (
            <div className="mt-4">
                <strong>Symptoms:</strong> {appointment.symptoms.join(', ')}
            </div>
        )}
      </section>

      {appointment.needs_bed && bedDetails && (
        <section>
          <h2 className="text-xl font-semibold border-b-2 border-gray-200 pb-2 mb-4">Bed/Cabin Details</h2>
          <p><strong>Type:</strong> {appointment.bed_type}</p>
          <p><strong>Price per night:</strong> â‚¹{bedDetails.price}</p>
          <div className="mt-2">
            <strong>Features:</strong>
            <ul className="list-disc list-inside ml-4">
              {bedDetails.features.map((feature, i) => <li key={i}>{feature}</li>)}
            </ul>
          </div>
        </section>
      )}

      <footer className="text-center text-gray-500 mt-10">
        <p>This receipt was auto-generated by Doctigo AI.</p>
        <p>Issued on: {new Date().toLocaleString()}</p>
      </footer>
    </div>
  );
};

export default function AppointmentCard({ appointment }) {
  const handleDownload = () => {
    window.print();
  };

  const bedDetails = appointment.bed_details ? JSON.parse(appointment.bed_details) : null;

  return (
    <motion.div
      initial={{ opacity: 0, y: 30 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="max-w-md mx-auto"
    >
      <style>{`
        @media print {
          body * {
            visibility: hidden;
          }
          #print-receipt, #print-receipt * {
            visibility: visible;
          }
          #print-receipt {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
          }
        }
      `}</style>
      <PrintReceipt appointment={appointment} bedDetails={bedDetails} />

      <Card className="border-2 border-green-200 shadow-lg bg-gradient-to-br from-green-50 to-blue-50">
        <CardHeader className="text-center bg-gradient-to-r from-green-500 to-blue-500 text-white rounded-t-lg">
          <CardTitle className="flex items-center justify-center gap-2">
            <Calendar className="w-5 h-5" />
            Appointment Confirmed
          </CardTitle>
          <Badge className="bg-white text-green-600 mt-2">
            {appointment.booking_type === 'emergency' ? 'ðŸš¨ Emergency' : 'ðŸ“‹ Normal'} Booking
          </Badge>
        </CardHeader>
        
        <CardContent className="p-6 space-y-4">
          <div className="text-center border-b border-gray-200 pb-4">
            <h3 className="text-xl font-bold text-gray-900">{appointment.patient_name}</h3>
            <p className="text-sm text-gray-600">Patient</p>
          </div>

          <div className="grid grid-cols-1 gap-4">
            <div className="flex items-center gap-3 p-3 bg-white rounded-lg border">
              <User className="w-5 h-5 text-blue-500" />
              <div>
                <p className="font-medium">Dr. {appointment.doctor_name}</p>
                <p className="text-sm text-gray-600">Attending Physician</p>
              </div>
            </div>

            <div className="flex items-center gap-3 p-3 bg-white rounded-lg border">
              <Calendar className="w-5 h-5 text-green-500" />
              <div>
                <p className="font-medium">{new Date(appointment.appointment_date).toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' })}</p>
                <p className="text-sm text-gray-600">{appointment.appointment_time}</p>
              </div>
            </div>

            <div className="flex items-center gap-3 p-3 bg-white rounded-lg border">
              <MapPin className="w-5 h-5 text-red-500" />
              <div>
                <p className="font-medium">{appointment.hospital_name}</p>
                {appointment.distance_km && <p className="text-sm text-gray-600">{appointment.distance_km.toFixed(1)}km â€¢ ~{appointment.estimated_travel_time} min travel</p>}
              </div>
            </div>

            {appointment.needs_bed && bedDetails && (
              <div className="flex items-center gap-3 p-3 bg-white rounded-lg border border-orange-200">
                <BedDouble className="w-5 h-5 text-orange-500" />
                <div>
                  <p className="font-medium">{appointment.bed_type} Reserved</p>
                  <p className="text-sm text-gray-600">â‚¹{bedDetails.price}/night</p>
                </div>
              </div>
            )}
          </div>

          <div className="pt-4 border-t border-gray-200">
            <Button 
              onClick={handleDownload}
              variant="outline" 
              className="w-full flex items-center gap-2"
            >
              <Download className="w-4 h-4" />
              Download PDF Receipt
            </Button>
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}
